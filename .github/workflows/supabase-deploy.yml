name: Deploy to Supabase

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg2-binary
          
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest
          
      - name: Set environment variables
        run: |
          echo "DATABASE_PROVIDER=supabase" >> $GITHUB_ENV
          echo "POSTGRES_CONNECTION_STRING=postgresql://postgres.apifyzsbctxzfwrqkcqb:${{ secrets.SUPABASE_DB_PASSWORD }}@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres" >> $GITHUB_ENV
          
      - name: Mark migrations as applied
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          DATABASE_PROVIDER: supabase
        run: |
          alembic -c migrations/alembic.ini stamp head
          
      - name: Run database migrations
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          DATABASE_PROVIDER: supabase
        run: |
          alembic -c migrations/alembic.ini upgrade head
          
      - name: Check for deployment success
        if: ${{ success() }}
        run: |
          echo "✅ Deployment to Supabase successful!"
          
      - name: Handle deployment failure
        if: ${{ failure() }}
        run: |
          echo "❌ Deployment to Supabase failed!"